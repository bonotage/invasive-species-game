{"version":3,"sources":["Message.js","DialogBox.js","Game2.js","Game1.js","components.js","Home.js","App.js","index.js","styles.module.css","Game2.module.scss","resources/piggy.png","resources/squid-game-minimalist-characters-0.jpg","resources/card.png","resources/danube.mp3","resources/money.png","resources/bedroom.jpg","resources/squid-game-minimalist-characters-1.jpg","resources/squid-game-minimalist-characters-2.jpg","resources/squid-game-minimalist-characters-3.jpg","resources/squid-game-minimalist-characters-4.jpg","resources/squid-game-minimalist-characters-5.jpg","resources/squid-game-minimalist-characters-6.jpg","resources/squid-game-minimalist-characters-7.jpg","resources/Lobby.png","resources/knight.jpg"],"names":["Message","message","items","useMemo","split","map","letter","index","item","key","console","log","length","transitions","useTransition","trail","from","display","enter","flush","className","props","span","style","messages","DialogBox","useState","currentMessage","setCurrentMessage","onClick","locations","process","PORT","socket","socketIOClient","x","y","i","push","Game2","React","wobble","setWobble","wobble1","setWobble1","wobble2","setWobble2","wobble3","setWobble3","wobble4","setWobble4","wobble5","setWobble5","dropIn","setDropIn","useEffect","on","data","backgroundImage","styles","game","src","bedroom","alt","piggy","money","dropin","image","left","top","emit","onAnimationEnd","Header","children","rest","header","Header2","header2","Subheader","subheader","Content","cx","container","gridDisplay","CharacterBox","forwardRef","ref","isSelected","type","headerProps","imgProps","disableFlashing","characterBox","selectedBox","tier2","selected","noAnimation","src2","characterSelections","agribusinessImg","id","lanternflyImg","citizenImg","conservationImg","governmentImg","plantImg","farmerImg","hunterImg","mappedCharSelections","reduce","acc","mappedCharIds","audioplayer","Audio","audio","Home","childToParent","morphRef","createRef","morphedRef","setSelected","morphing","setMorphing","morphed","setMorphed","ready","setReady","shutdown","setShutdown","scrollToComponent","current","offset","align","duration","setTimeout","onSelect","e","onMorph","play","useLevelUpScreen","startGame","landing","setLanding","document","body","backgroundColor","card","width","position","class","root","rootTransition","color","margin","hidden","unique","morph","morphArrow","name","opacity","disabled","morphArrowFlipped","next","size","loading","App","io","connect","setStartGame","childdata","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.fa6eca4f.chunk.js","sourcesContent":["import React, { useMemo } from \"react\";\r\nimport { animated, useTransition } from \"react-spring\";\r\nimport \"./DialogBox.css\";\r\n\r\nconst Message = ({ message }) => {\r\n  const items = useMemo(\r\n    () =>\r\n      message.split(\"\").map((letter, index) => ({\r\n        item: letter,\r\n        key: index,\r\n      })),\r\n    [message]\r\n  );\r\n\r\n  console.log(items); //issue not with memo or items\r\n  console.log(items[items.length - 1].key);\r\n\r\n  const transitions = useTransition(items, (item) => item.key, {\r\n    trail: 35,\r\n    from: { display: \"none\" },\r\n    enter: { display: \"\" },\r\n  });\r\n\r\n  const flush = useTransition([\"\"], (item) => item.key, {\r\n    trail: 35,\r\n    from: { display: \"none\" },\r\n    enter: { display: \"\" },\r\n  });\r\n\r\n  console.log(\"got here\");\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"DialogMessage\">\r\n        {flush.map(({ item, props, key }) => {\r\n          // {\r\n          //   console.log(item.item);\r\n          // }\r\n          return (\r\n            <animated.span key={key} style={props}>\r\n              {item.item}\r\n            </animated.span>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <div className=\"DialogMessage\">\r\n        {transitions.map(({ item, props, key }) => {\r\n          // {\r\n          //   console.log(item.item);\r\n          // }\r\n          return (\r\n            <animated.span key={key} style={props}>\r\n              {item.item}\r\n            </animated.span>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Message from \"./Message\";\r\nimport \"./DialogBox.css\";\r\n\r\n// const messages = [\r\n//   \"Strengths: Government support; Weaknesses: Nature\",\r\n//   \"Strengths: Weaknesses:\",\r\n//   \"Strengths: +3, Weaknesses: -2\",\r\n// ];\r\n\r\nconst messages = [\r\n  [\r\n    \"Strengths: Government Support\",\r\n    \"Weaknesses: Threatened by invasive species\",\r\n  ],\r\n  [\"Strengths: No natural predators\", \"Weaknesses: Many enemies\"],\r\n  [\"Strengths: +2\", \"Weaknesses: -2\"],\r\n  [\"Strengths: +3\", \"Weaknesses: -3\"],\r\n  [\"Strengths: +4\", \"Weaknesses: -4\"],\r\n  [\"Strengths: +5\", \"Weaknesses: -5\"],\r\n  [\"Strengths: +6\", \"Weaknesses: -6\"],\r\n  [\"Strengths: +7\", \"Weaknesses: -7\"],\r\n];\r\n\r\n// { type: \"Agribusiness\", src: sorceressImg, src2: phantomImg },\r\n// { type: \"Lanternfly\", src: knightImg },\r\n// { type: \"Citizen\", src: shapeshifterImg },\r\n// { type: \"Conservationist\", src: banditImg },\r\n// { type: \"Government\", src: archerImg },\r\n// { type: \"Other Plants\", src: bladeMasterImg },\r\n// { type: \"Farmer\", src: destroyerImg },\r\n\r\nconst DialogBox = ({ index }) => {\r\n  console.log(\"Selected character at index \" + index);\r\n  //index of current message\r\n  // const [lastIndex, setlastIndex] = useState(-1);\r\n  // if (index != lastIndex) {setlastIndex(index); setCurrentMessage(0)}\r\n\r\n  const [currentMessage, setCurrentMessage] = useState(0);\r\n  const handleClick = () => {\r\n    if (currentMessage < messages[index].length - 1) {\r\n      setCurrentMessage(currentMessage + 1);\r\n    } else {\r\n      setCurrentMessage(0);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"DialogWindow\">\r\n      <div className=\"DialogTitle\">Stats</div>\r\n      <Message message={messages[index][currentMessage]} key={currentMessage} />\r\n      <div onClick={handleClick} className=\"DialogFooter\">\r\n        Next\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogBox;\r\n","// import React from \"react\";\r\nimport styles from \"./Game2.module.scss\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport piggy from \"./resources/piggy.png\";\r\nimport money from \"./resources/money.png\";\r\nimport lobby from \"./resources/Lobby.png\";\r\nimport bedroom from \"./resources/bedroom.jpg\";\r\n\r\nconst port = process.env.PORT || 4001;\r\n\r\n// const ENDPOINT = \"http://127.0.0.1:\" + port;\r\nconst ENDPOINT = \"https://squid-plus-game.herokuapp.com/\";\r\n\r\nlet locations = [];\r\nconst n = 6;\r\nconst socket = socketIOClient(ENDPOINT);\r\n// const socket = io();\r\nlet x = [];\r\nlet y = [];\r\n\r\nfor (var i = 0; i < n; i++) {\r\n  // locations.push([Math.random() * 50 + 20, Math.random() * 50 + 20]);\r\n  locations.push([5 + 15 * i, 40]); //in percentages\r\n  x[i] = 5 + 15 * i;\r\n  y[i] = 40;\r\n}\r\n\r\nconsole.log(locations);\r\n\r\nconst max = 5;\r\nconst min = -5;\r\n\r\nconst Game2 = () => {\r\n  const [wobble, setWobble] = React.useState(0);\r\n  const [wobble1, setWobble1] = React.useState(0);\r\n  const [wobble2, setWobble2] = React.useState(0);\r\n  const [wobble3, setWobble3] = React.useState(0);\r\n  const [wobble4, setWobble4] = React.useState(0);\r\n  const [wobble5, setWobble5] = React.useState(0);\r\n  const [wobble6, setWobble6] = React.useState(0);\r\n  const [wobble7, setWobble7] = React.useState(0);\r\n  const [dropIn, setDropIn] = React.useState(0);\r\n  const [coordinates, setCoordinates] = React.useState(30);\r\n\r\n  const [response, setResponse] = useState(\"\");\r\n\r\n  // setCoordinates {() => {\r\n  //   for (var i = 0; i < n; i++) {\r\n  //     // locations.push([Math.random() * 50 + 20, Math.random() * 50 + 20]);\r\n  //     coordinates[i][0] += Math.floor(Math.random() * (max - min + 1)) + min;\r\n  //     coordinates[i][1] += Math.floor(Math.random() * (max - min + 1)) + min;\r\n  //   }\r\n  // };\r\n\r\n  useEffect(() => {\r\n    socket.on(\"dropIn\", (data) => {\r\n      setDropIn(data);\r\n      console.log(\"dropped money\");\r\n    });\r\n    socket.on(\"wobble0\", (data) => {\r\n      // setResponse(data);\r\n      setWobble(data);\r\n      console.log(\"received 0\");\r\n    });\r\n\r\n    socket.on(\"wobble1\", (data) => {\r\n      // setResponse(data);\r\n      setWobble1(data);\r\n      console.log(\"received 1\");\r\n    });\r\n\r\n    socket.on(\"wobble2\", (data) => {\r\n      // setResponse(data);\r\n      setWobble2(data);\r\n      console.log(\"received 2\");\r\n    });\r\n\r\n    socket.on(\"wobble3\", (data) => {\r\n      // setResponse(data);\r\n      setWobble3(data);\r\n      console.log(\"received 3\");\r\n    });\r\n\r\n    socket.on(\"wobble4\", (data) => {\r\n      // setResponse(data);\r\n      setWobble4(data);\r\n      console.log(\"received 4\");\r\n    });\r\n\r\n    socket.on(\"wobble5\", (data) => {\r\n      // setResponse(data);\r\n      setWobble5(data);\r\n      console.log(\"received 5\");\r\n    });\r\n  }, []);\r\n\r\n  // socket.on(\"wobble0\", function (obj) {\r\n  //   setWobble(obj);\r\n  //   console.log(\"received\");\r\n  // });\r\n\r\n  // document.body.style.backgroundColor = \"white\";\r\n  // document.body.style.backgroundImage = \"./resources/bedroom.jpg\";\r\n  // document.body.style =\r\n\r\n  return (\r\n    <div style={{ backgroundImage: `url(\"./resources/bedroom.jpg\")` }}>\r\n      <img className={styles.game} src={bedroom} alt=\"backgrounds\" />\r\n      <img className={styles.piggy} src={piggy} alt=\"randomised!\" />\r\n\r\n      <img\r\n        className={styles.money}\r\n        src={money}\r\n        alt=\"randomised!\"\r\n        dropin={dropIn}\r\n      />\r\n\r\n      {/* {console.log(\"dropIn is \" + dropIn)}\r\n      {x.map((x) => x + Math.floor(Math.random() * (max - min + 1)) + min)}\r\n      {console.log(x)} */}\r\n\r\n      <img\r\n        className={styles.image}\r\n        src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/191814/devil_compressed.gif\"\r\n        alt=\"randomised!\"\r\n        style={{ left: locations[0][0] + \"%\", top: locations[0][1] + \"%\" }}\r\n        onClick={() => {\r\n          socket.emit(\"wobble0\", 1);\r\n          socket.emit(\"dropIn\", 1);\r\n          console.log(\"emitted\");\r\n          // setWobble(1);\r\n        }}\r\n        onAnimationEnd={() => {\r\n          setWobble(0);\r\n          setDropIn(0);\r\n        }}\r\n        wobble={wobble}\r\n      />\r\n\r\n      <img\r\n        className={styles.image}\r\n        src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/191814/devil_compressed.gif\"\r\n        alt=\"randomised!\"\r\n        style={{ left: locations[1][0] + \"%\", top: locations[1][1] + \"%\" }}\r\n        onClick={() => {\r\n          socket.emit(\"wobble1\", 1);\r\n          socket.emit(\"dropIn\", 1);\r\n          console.log(\"emitted\");\r\n          // setWobble(1);\r\n        }}\r\n        onAnimationEnd={() => {\r\n          setWobble1(0);\r\n          setDropIn(0);\r\n        }}\r\n        wobble={wobble1}\r\n      />\r\n\r\n      <img\r\n        className={styles.image}\r\n        src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/191814/devil_compressed.gif\"\r\n        alt=\"randomised!\"\r\n        style={{ left: locations[2][0] + \"%\", top: locations[2][1] + \"%\" }}\r\n        onClick={() => {\r\n          socket.emit(\"wobble2\", 1);\r\n          socket.emit(\"dropIn\", 1);\r\n          console.log(\"emitted\");\r\n          // setWobble(1);\r\n        }}\r\n        onAnimationEnd={() => {\r\n          setWobble2(0);\r\n          setDropIn(0);\r\n        }}\r\n        wobble={wobble2}\r\n      />\r\n\r\n      <img\r\n        className={styles.image}\r\n        src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/191814/devil_compressed.gif\"\r\n        alt=\"randomised!\"\r\n        style={{ left: locations[3][0] + \"%\", top: locations[3][1] + \"%\" }}\r\n        onClick={() => {\r\n          socket.emit(\"wobble3\", 1);\r\n          socket.emit(\"dropIn\", 1);\r\n          console.log(\"emitted\");\r\n          // setWobble(1);\r\n        }}\r\n        onAnimationEnd={() => {\r\n          setWobble3(0);\r\n          setDropIn(0);\r\n        }}\r\n        wobble={wobble3}\r\n      />\r\n\r\n      <img\r\n        className={styles.image}\r\n        src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/191814/devil_compressed.gif\"\r\n        alt=\"randomised!\"\r\n        style={{ left: locations[4][0] + \"%\", top: locations[4][1] + \"%\" }}\r\n        onClick={() => {\r\n          socket.emit(\"wobble4\", 1);\r\n          socket.emit(\"dropIn\", 1);\r\n          console.log(\"emitted\");\r\n          // setWobble(1);\r\n        }}\r\n        onAnimationEnd={() => {\r\n          setWobble4(0);\r\n          setDropIn(0);\r\n        }}\r\n        wobble={wobble4}\r\n      />\r\n\r\n      <img\r\n        className={styles.image}\r\n        src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/191814/devil_compressed.gif\"\r\n        alt=\"randomised!\"\r\n        style={{ left: locations[5][0] + \"%\", top: locations[5][1] + \"%\" }}\r\n        onClick={() => {\r\n          socket.emit(\"wobble5\", 1);\r\n          socket.emit(\"dropIn\", 1);\r\n          console.log(\"emitted\");\r\n          // setWobble(1);\r\n        }}\r\n        onAnimationEnd={() => {\r\n          setWobble5(0);\r\n          setDropIn(0);\r\n        }}\r\n        wobble={wobble5}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game2;\r\n\r\n// import React from \"react\";\r\n// import { render } from \"react-dom\";\r\n// import { ReactP5Wrapper } from \"react-p5-wrapper\";\r\n// import p5 from \"p5\";\r\n\r\n// // Sloppy way of styling.. but it's a sandbox..\r\n// const styles = {\r\n//   fontFamily: \"sans-serif\",\r\n//   textAlign: \"center\",\r\n//   overflow: \"hidden\",\r\n// };\r\n\r\n// // Sloppy way of styling.. but it's a sandbox..\r\n// const header = {\r\n//   display: \"flex\",\r\n//   flexDirection: \"column\",\r\n//   alignItems: \"center\",\r\n//   position: \"absolute\",\r\n//   width: \"100%\",\r\n//   fontFamily: \"fantasy\",\r\n//   fontSize: 34,\r\n//   lineHeight: 0.2,\r\n//   userSelect: \"none\",\r\n//   color: \"rgba(255,255,255,0.95)\",\r\n//   textShadow: \"#222 1px 0px 15px\",\r\n// };\r\n\r\n// const controls = {\r\n//   background: \"rgba(40,40,40,0.95)\",\r\n//   position: \"fixed\",\r\n//   marginTop: 50,\r\n//   // width: \"50%\",\r\n//   display: \"flex\",\r\n//   flexDirection: \"column\",\r\n//   padding: 20,\r\n//   cursor: \"pointer\",\r\n// };\r\n\r\n// const control = {\r\n//   display: \"flex\",\r\n//   flexDirection: \"column\",\r\n//   color: \"white\",\r\n//   cursor: \"pointer\",\r\n// };\r\n\r\n// // Particles along the path\r\n// class Particle {\r\n//   constructor(p, position, force, hue, drag, lifespan) {\r\n//     this.p = p;\r\n//     this.position = p.createVector(position.x, position.y);\r\n//     this.velocity = p.createVector(force.x, force.y);\r\n//     this.lifespan = lifespan;\r\n//     this.force = force;\r\n//     this.drag = drag;\r\n//     this.hue = hue;\r\n\r\n//     this.start = Date.now();\r\n//   }\r\n\r\n//   update() {\r\n//     // Move it\r\n//     this.position.add(this.velocity);\r\n\r\n//     // Slow it down\r\n//     this.velocity.mult(this.drag);\r\n\r\n//     // Fade it out\r\n//     let dt = Date.now() - this.start;\r\n//     let vel = 0.01 * dt;\r\n//     this.lifespan = this.lifespan - vel;\r\n//   }\r\n\r\n//   // Draw particle and connect it with a line\r\n//   // Draw a line to another\r\n//   display(other) {\r\n//     this.p.stroke(0, this.lifespan);\r\n//     this.p.fill(0, this.lifespan / 2);\r\n//     this.p.ellipse(this.position.x, this.position.y, 8, 8);\r\n\r\n//     // If we need to draw a line\r\n//     if (other) {\r\n//       this.p.line(\r\n//         this.position.x,\r\n//         this.position.y,\r\n//         other.position.x,\r\n//         other.position.y\r\n//       );\r\n//     }\r\n//   }\r\n// }\r\n\r\n// // A Path is a list of particles\r\n// class Paths {\r\n//   constructor(p) {\r\n//     this.particles = [];\r\n//     this.p = p;\r\n//   }\r\n\r\n//   // Add a new particle with a position, force, and hue\r\n//   add(particle) {\r\n//     this.particles.push(particle);\r\n//   }\r\n\r\n//   // Display plath\r\n//   update() {\r\n//     for (var i = 0; i < this.particles.length; i++) {\r\n//       this.particles[i].update();\r\n//     }\r\n//   }\r\n\r\n//   // Display plath\r\n//   display() {\r\n//     // Loop through backwards\r\n//     for (var i = this.particles.length - 1; i >= 0; i--) {\r\n//       // If we shold remove it\r\n//       if (this.particles[i].lifespan <= 0) {\r\n//         this.particles.splice(i, 1);\r\n//       } else {\r\n//         // Otherwise, display it\r\n//         this.particles[i].display(this.particles[i + 1]);\r\n//       }\r\n//     }\r\n//   }\r\n// }\r\n\r\n// export default class Game2 extends React.Component {\r\n//   constructor() {\r\n//     super();\r\n\r\n//     this.state = {\r\n//       hue: 0,\r\n//       drag: 0.2,\r\n//       baseHue: 255,\r\n//       lifespan: 255,\r\n//       painting: false,\r\n//     };\r\n\r\n//     this.sketch = this.sketch.bind(this);\r\n//   }\r\n\r\n//   sketch(p) {\r\n//     // All the paths\r\n//     var paths = new Paths(p);\r\n\r\n//     // How long until the next circle\r\n//     var next = 0;\r\n\r\n//     // Where are we now and where were we?\r\n//     var current;\r\n//     var previous;\r\n\r\n//     p.setup = () => {\r\n//       p.createCanvas(window.innerWidth, window.innerHeight);\r\n//       current = p.createVector(0, 0);\r\n//       previous = p.createVector(0, 0);\r\n//       this.setState({ hue: p.random(this.state.baseHue) });\r\n//     };\r\n\r\n//     p.draw = () => {\r\n//       p.background(255);\r\n\r\n//       // If it's time for a new point\r\n//       if (p.millis() > next && this.state.painting) {\r\n//         // Grab mouse position\r\n//         current.x = p.mouseX;\r\n//         current.y = p.mouseY;\r\n\r\n//         // New particle's force is based on mouse movement\r\n//         var force = p5.Vector.sub(current, previous);\r\n//         force.mult(0.05);\r\n\r\n//         paths.particles[paths.particles.length - 1].add(\r\n//           new Particle(\r\n//             p,\r\n//             current,\r\n//             force,\r\n//             this.state.hue,\r\n//             this.state.drag,\r\n//             this.state.lifespan\r\n//           )\r\n//         );\r\n\r\n//         // Schedule next circle\r\n//         next = p.millis() + p.random(10);\r\n\r\n//         // Store mouse values\r\n//         previous.x = current.x;\r\n//         previous.y = current.y;\r\n//       }\r\n\r\n//       // Draw all paths\r\n//       for (var i = 0; i < paths.particles.length; i++) {\r\n//         paths.particles[i].update();\r\n//         paths.particles[i].display(paths.particles[i]);\r\n//       }\r\n//     };\r\n\r\n//     // Start it up\r\n//     p.mousePressed = () => {\r\n//       next = 0;\r\n//       this.setState({ painting: true });\r\n//       previous.x = p.mouseX;\r\n//       previous.y = p.mouseY;\r\n//       paths.particles.push(new Paths(p));\r\n//     };\r\n\r\n//     // Stop\r\n//     p.mouseReleased = () => {\r\n//       this.setState({ painting: false });\r\n//     };\r\n//   }\r\n\r\n//   changeLifetime(e) {\r\n//     e.persist();\r\n//     // console.log(sketch.name);\r\n//     // sketch.\r\n//     this.setState({\r\n//       baseHue: e.target.value,\r\n//       lifespan: e.target.value,\r\n//     });\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//       <div style={styles}>\r\n//         <div style={header}>\r\n//           <h1>Draw Something!</h1>\r\n//           <h3>Click & Drag</h3>\r\n//         </div>\r\n//         <div style={controls}>\r\n//           <div style={control}>\r\n//             <label>Lifespan : {this.state.lifespan}</label>\r\n//             <input\r\n//               type=\"range\"\r\n//               onChange={this.changeLifetime.bind(this)}\r\n//               min=\"255\"\r\n//               max=\"5000\"\r\n//             />\r\n//           </div>\r\n//         </div>\r\n//         <ReactP5Wrapper sketch={this.sketch.bind(this)} />\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// // render(<App />, document.getElementById(\"root\"));\r\n\r\n// // import React, { useEffect, useState } from \"react\";\r\n// // // import Sketch from \"react-p5\";\r\n// // import { render } from \"react-dom\";\r\n// // import P5Wrapper from \"react-p5-wrapper\";\r\n// // import p5 from \"p5\";\r\n\r\n// // import cx from \"classnames\";\r\n// // // import styles from \"./Game2.scss\";\r\n// // import TextBox from \"./TextBox\";\r\n\r\n// // // import plant-cursor from \"./resources/plant.ico\"\r\n\r\n// // import socketIOClient from \"socket.io-client\";\r\n// // const ENDPOINT = \"http://127.0.0.1:4001\";\r\n\r\n// // const Game2 = () => {\r\n// //   // const [wobble, setWobble] = useState(1);\r\n\r\n// //   // document.body.style.backgroundColor = \"black\";\r\n\r\n// //   const [response, setResponse] = useState(\"\");\r\n\r\n// //   useEffect(() => {\r\n// //     const socket = socketIOClient(ENDPOINT);\r\n// //     socket.on(\"FromAPI\", (data) => {\r\n// //       setResponse(data);\r\n// //       console.log(response);\r\n// //     });\r\n// //   }, []);\r\n\r\n// //   let x = 50;\r\n// //   let y = 50;\r\n// //   let cnv;\r\n// //   let characters;\r\n// //   let nChars = 10;\r\n// // //   const [coordinates, setCoordinates] = useState([]);\r\n// // class Particle {\r\n// //     constructor(p, position, force, hue, drag, lifespan) {\r\n// //       this.p = p;\r\n// //       this.position = p.createVector(position.x, position.y);\r\n// //       this.velocity = p.createVector(force.x, force.y);\r\n// //       this.lifespan = lifespan;\r\n// //       this.force = force;\r\n// //       this.drag = drag;\r\n// //       this.hue = hue;\r\n\r\n// //       this.start = Date.now();\r\n// //     }\r\n\r\n// //     update() {\r\n// //       // Move it\r\n// //       this.position.add(this.velocity);\r\n\r\n// //       // Slow it down\r\n// //       this.velocity.mult(this.drag);\r\n\r\n// //       // Fade it out\r\n// //       let dt = Date.now() - this.start;\r\n// //       let vel = 0.01 * dt;\r\n// //       this.lifespan = this.lifespan - vel;\r\n// //     }\r\n\r\n// //     // Draw particle and connect it with a line\r\n// //     // Draw a line to another\r\n// //     display(other) {\r\n// //       this.p.stroke(0, this.lifespan);\r\n// //       this.p.fill(0, this.lifespan / 2);\r\n// //       this.p.ellipse(this.position.x, this.position.y, 8, 8);\r\n\r\n// //       // If we need to draw a line\r\n// //       if (other) {\r\n// //         this.p.line(\r\n// //           this.position.x,\r\n// //           this.position.y,\r\n// //           other.position.x,\r\n// //           other.position.y\r\n// //         );\r\n// //       }\r\n// //     }\r\n// //   }\r\n\r\n// //   class Paths {\r\n// //     constructor(p) {\r\n// //       this.particles = [];\r\n// //       this.p = p;\r\n// //     }\r\n\r\n// //     // Add a new particle with a position, force, and hue\r\n// //     add(particle) {\r\n// //       this.particles.push(particle);\r\n// //     }\r\n\r\n// //     // Display plath\r\n// //     update() {\r\n// //       for (var i = 0; i < this.particles.length; i++) {\r\n// //         this.particles[i].update();\r\n// //       }\r\n// //     }\r\n\r\n// //     // Display plath\r\n// //     display() {\r\n// //       // Loop through backwards\r\n// //       for (var i = this.particles.length - 1; i >= 0; i--) {\r\n// //         // If we shold remove it\r\n// //         if (this.particles[i].lifespan <= 0) {\r\n// //           this.particles.splice(i, 1);\r\n// //         } else {\r\n// //           // Otherwise, display it\r\n// //           this.particles[i].display(this.particles[i + 1]);\r\n// //         }\r\n// //       }\r\n// //     }\r\n// //   }\r\n\r\n// //     class Game2 extends React.Component {\r\n// //     constructor() {\r\n// //       super();\r\n\r\n// //       this.state = {\r\n// //         hue: 0,\r\n// //         drag: 0.2,\r\n// //         baseHue: 255,\r\n// //         lifespan: 255,\r\n// //         painting: false\r\n// //       };\r\n\r\n// //       this.sketch = this.sketch.bind(this);\r\n// //     }\r\n\r\n// //     sketch(p) {\r\n// //       // All the paths\r\n// //       var paths = new Paths(p);\r\n\r\n// //       // How long until the next circle\r\n// //       var next = 0;\r\n\r\n// //       // Where are we now and where were we?\r\n// //       var current;\r\n// //       var previous;\r\n\r\n// //       p.setup = () => {\r\n// //         p.createCanvas(window.innerWidth, window.innerHeight);\r\n// //         current = p.createVector(0, 0);\r\n// //         previous = p.createVector(0, 0);\r\n// //         this.setState({ hue: p.random(this.state.baseHue) });\r\n// //       };\r\n\r\n// //       p.draw = () => {\r\n// //         p.background(255);\r\n\r\n// //         // If it's time for a new point\r\n// //         if (p.millis() > next && this.state.painting) {\r\n// //           // Grab mouse position\r\n// //           current.x = p.mouseX;\r\n// //           current.y = p.mouseY;\r\n\r\n// //           // New particle's force is based on mouse movement\r\n// //           var force = p5.Vector.sub(current, previous);\r\n// //           force.mult(0.05);\r\n\r\n// //           paths.particles[paths.particles.length - 1].add(\r\n// //             new Particle(\r\n// //               p,\r\n// //               current,\r\n// //               force,\r\n// //               this.state.hue,\r\n// //               this.state.drag,\r\n// //               this.state.lifespan\r\n// //             )\r\n// //           );\r\n\r\n// //           // Schedule next circle\r\n// //           next = p.millis() + p.random(10);\r\n\r\n// //           // Store mouse values\r\n// //           previous.x = current.x;\r\n// //           previous.y = current.y;\r\n// //         }\r\n\r\n// //         // Draw all paths\r\n// //         for (var i = 0; i < paths.particles.length; i++) {\r\n// //           paths.particles[i].update();\r\n// //           paths.particles[i].display(paths.particles[i]);\r\n// //         }\r\n// //       };\r\n\r\n// //       // Start it up\r\n// //       p.mousePressed = () => {\r\n// //         next = 0;\r\n// //         this.setState({ painting: true });\r\n// //         previous.x = p.mouseX;\r\n// //         previous.y = p.mouseY;\r\n// //         paths.particles.push(new Paths(p));\r\n// //       };\r\n\r\n// //       // Stop\r\n// //       p.mouseReleased = () => {\r\n// //         this.setState({ painting: false });\r\n// //       };\r\n// //     }\r\n\r\n// //     changeLifetime(e) {\r\n// //       e.persist();\r\n// //       // console.log(sketch.name);\r\n// //       // sketch.\r\n// //       this.setState({\r\n// //         baseHue: e.target.value,\r\n// //         lifespan: e.target.value\r\n// //       });\r\n// //     }\r\n\r\n// //     render() {\r\n// //       return (\r\n// //         <div style={styles}>\r\n// //           <div style={header}>\r\n// //             <h1>Draw Something!</h1>\r\n// //             <h3>Click & Drag</h3>\r\n// //           </div>\r\n// //           <div style={controls}>\r\n// //             <div style={control}>\r\n// //               <label>Lifespan : {this.state.lifespan}</label>\r\n// //               <input\r\n// //                 type=\"range\"\r\n// //                 onChange={this.changeLifetime.bind(this)}\r\n// //                 min=\"255\"\r\n// //                 max=\"5000\"\r\n// //               />\r\n// //             </div>\r\n// //           </div>\r\n// //           <P5Wrapper sketch={this.sketch.bind(this)} />\r\n// //         </div>\r\n// //       );\r\n// //     }\r\n// //   }\r\n\r\n// //   render(<App />, document.getElementById(\"root\"));\r\n// //   const setup = (p5, canvasParentRef) => {\r\n// //     // use parent to render the canvas in this ref\r\n// //     // (without that p5 will render the canvas outside of your component)\r\n// //     cnv = p5\r\n// //       .createCanvas(window.innerWidth, window.innerHeight)\r\n// //       .parent(canvasParentRef);\r\n// //     cnv.mousePressed((event) => {\r\n// //       console.log(\"Clicked on the canvas. Event:\", event);\r\n// //     });\r\n\r\n// //     characters = [];\r\n\r\n// //     for (var i = 0; i < nChars; i++) {\r\n// //       characters.push([\r\n// //         Math.random() * window.innerWidth,\r\n// //         Math.random() * window.innerHeight,\r\n// //       ]);\r\n// //       console.log(characters[i]);\r\n// //     }\r\n// //   };\r\n\r\n// //   const draw = (p5) => {\r\n// //     p5.background(0);\r\n// //     // p5.ellipse(x, y, 70, 70);\r\n// //     // p5.ellipse(p5.mouseX, p5.mouseY, 70, 70);\r\n\r\n// //     console.log(characters[0][0]);\r\n// //     characters.map((i) =>\r\n// //       p5.ellipse(characters[i][0], characters[i][1], 70, 70)\r\n// //     );\r\n\r\n// //     // NOTE: Do not use setState in the draw function or in functions that are executed\r\n// //     // in the draw function...\r\n// //     // please use normal variables or class properties for these purposes\r\n// //     x++;\r\n// //   };\r\n\r\n// //   return <Sketch setup={setup} draw={draw} />;\r\n\r\n// //   //   return (\r\n// //   //     <div style={{ cursor: \"url(./resources/plant.ico),auto\" }}> hello </div>\r\n// //   //   );\r\n// // };\r\n\r\n// // export default Game2;\r\n\r\n// // render(<App />, document.getElementById(\"root\"));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport cx from \"classnames\";\r\nimport styles from \"./Game1.module.scss\";\r\nimport piggy from \"./resources/piggy.png\";\r\nimport TextBox from \"./TextBox\";\r\n\r\nimport socketIOClient from \"socket.io-client\";\r\nconst ENDPOINT = \"http://127.0.0.1:4001\";\r\n\r\nconst Game1 = () => {\r\n  // const [wobble, setWobble] = useState(1);\r\n\r\n  // document.body.style.backgroundColor = \"black\";\r\n\r\n  const [response, setResponse] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const socket = socketIOClient(ENDPOINT);\r\n    socket.on(\"FromAPI\", (data) => {\r\n      setResponse(data);\r\n      console.log(response);\r\n    });\r\n  }, []);\r\n\r\n  // if (true) {\r\n  //   return (\r\n  //     <div>\r\n  //       <TextBox />\r\n  //     </div>\r\n  //   );\r\n  // }\r\n  return (\r\n    <div>\r\n      {/* <img\r\n        classNameName={styles.image}\r\n        src=\"https://source.unsplash.com/random/400x200\"\r\n        alt=\"randomised!\"\r\n        onClick={() => setWobble(1)}\r\n        // onAnimationEnd={() => setWobble(0)}\r\n        wobble={wobble}\r\n      />\r\n      {wobble}\r\n      {console.log(wobble)} */}\r\n\r\n      <div className=\"wrapper\">\r\n        <div className=\"grid\">\r\n          <div className=\"container\">\r\n            <img\r\n              className=\"piggybank\"\r\n              src={piggy}\r\n              alt=\"piggy bank\"\r\n              width=\"300\"\r\n              height=\"300\"\r\n            ></img>\r\n\r\n            <h1 class=\"title1 demon\">Lanternfly</h1>\r\n            <h2 class=\"title2 killer\">killer</h2>\r\n            {/* <p>\r\n              It's <time dateTime={response}>{response}</time>\r\n            </p> */}\r\n          </div>\r\n        </div>\r\n        <input className=\"input-demon input-demon1\" type=\"radio\" id=\"demon1\" />\r\n        <input className=\"input-demon input-demon2\" type=\"radio\" id=\"demon2\" />\r\n        <input className=\"input-demon input-demon3\" type=\"radio\" id=\"demon3\" />\r\n        <input className=\"input-demon input-demon4\" type=\"radio\" id=\"demon4\" />\r\n        <input className=\"input-demon input-demon5\" type=\"radio\" id=\"demon5\" />\r\n        <input className=\"input-demon input-demon6\" type=\"radio\" id=\"demon6\" />\r\n        <input className=\"input-demon input-demon7\" type=\"radio\" id=\"demon7\" />\r\n        <input className=\"input-demon input-demon8\" type=\"radio\" id=\"demon8\" />\r\n        <label for=\"demon1\" className=\"minion minion1\">\r\n          <span></span>\r\n        </label>\r\n        <label for=\"demon2\" className=\"minion minion2\">\r\n          <span></span>\r\n        </label>\r\n        <label for=\"demon3\" className=\"minion minion3\">\r\n          <span></span>\r\n        </label>\r\n        <label for=\"demon4\" className=\"minion minion4\">\r\n          <span></span>\r\n        </label>\r\n        <label for=\"demon5\" className=\"minion minion5\">\r\n          <span></span>\r\n        </label>\r\n        <label for=\"demon6\" className=\"minion minion6\">\r\n          <span></span>\r\n        </label>\r\n        <label for=\"demon7\" className=\"minion minion7\">\r\n          <span></span>\r\n        </label>\r\n        <label for=\"demon8\" className=\"minion minion8\">\r\n          <span></span>\r\n        </label>\r\n        <div className=\"sum\">Minions Destroyed {response}:</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game1;\r\n","import React from \"react\";\r\nimport cx from \"classnames\";\r\nimport styles from \"./styles.module.css\";\r\n\r\nexport const Header = ({ children, ...rest }) => (\r\n  // eslint-disable-next-line\r\n  <h1 className={styles.header} {...rest}>\r\n    {children}\r\n  </h1>\r\n);\r\n\r\nexport const Header2 = ({ children, ...rest }) => (\r\n  // eslint-disable-next-line\r\n  <h1 className={styles.header2} {...rest}>\r\n    {children}\r\n  </h1>\r\n);\r\n\r\nexport const Subheader = ({ children, ...rest }) => (\r\n  <small className={styles.subheader} {...rest}>\r\n    {children}\r\n  </small>\r\n);\r\n\r\nexport const Content = ({ display = \"\", children, ...rest }) => (\r\n  <div\r\n    className={cx(styles.container, {\r\n      [styles.gridDisplay]: display === \"grid\",\r\n    })}\r\n    {...rest}\r\n  >\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport const CharacterBox = React.forwardRef(\r\n  (\r\n    {\r\n      isSelected,\r\n      type,\r\n      headerProps = {},\r\n      imgProps = {},\r\n      src,\r\n      disableFlashing,\r\n      ...rest\r\n    },\r\n    ref\r\n  ) => (\r\n    <div\r\n      ref={ref}\r\n      className={cx(styles.characterBox, {\r\n        [styles.selectedBox]: isSelected,\r\n      })}\r\n      {...rest}\r\n    >\r\n      {type && <h3 {...headerProps}>{type}</h3>}\r\n      <img\r\n        {...imgProps}\r\n        src={src || imgProps.src}\r\n        className={cx(styles.tier2, imgProps.className, {\r\n          [styles.selected]: isSelected,\r\n          [styles.noAnimation]: !!disableFlashing,\r\n        })}\r\n        alt=\"\"\r\n      />\r\n    </div>\r\n  )\r\n);\r\n\r\nexport const CharacterBox2 = React.forwardRef(\r\n  (\r\n    {\r\n      isSelected,\r\n      type,\r\n      headerProps = {},\r\n      imgProps = {},\r\n      src,\r\n      disableFlashing,\r\n      ...rest\r\n    },\r\n    ref\r\n  ) => (\r\n    <div\r\n      ref={ref}\r\n      className={cx(styles.characterBox, {\r\n        [styles.selectedBox]: isSelected,\r\n      })}\r\n      {...rest}\r\n    >\r\n      {type && <h3 {...headerProps}>{type}</h3>}\r\n      <img\r\n        {...imgProps}\r\n        src={src || imgProps.src2}\r\n        className={cx(styles.tier2, imgProps.className, {\r\n          [styles.selected]: isSelected,\r\n          [styles.noAnimation]: !!disableFlashing,\r\n        })}\r\n        alt=\"\"\r\n      />\r\n    </div>\r\n  )\r\n);\r\n","import React, { useState } from \"react\";\r\nimport cx from \"classnames\";\r\nimport { RingLoader } from \"react-spinners\";\r\nimport { MdKeyboardTab } from \"react-icons/md\";\r\nimport scrollToComponent from \"react-scroll-to-component\";\r\n\r\nimport DialogBox from \"./DialogBox\";\r\nimport \"./DialogBox.css\";\r\n\r\nimport Game1 from \"./Game1\";\r\nimport Game2 from \"./Game2\";\r\nimport { useNavigate, BrowserRouter as Router } from \"react-router-dom\";\r\nimport { Route, Navigate } from \"react-router\";\r\n\r\nimport noviceImg from \"./resources/squid-game-minimalist-characters-0.jpg\";\r\nimport citizenImg from \"./resources/squid-game-minimalist-characters-0.jpg\";\r\nimport governmentImg from \"./resources/squid-game-minimalist-characters-1.jpg\";\r\nimport farmerImg from \"./resources/squid-game-minimalist-characters-2.jpg\";\r\nimport agribusinessImg from \"./resources/squid-game-minimalist-characters-3.jpg\";\r\nimport lanternflyImg from \"./resources/squid-game-minimalist-characters-4.jpg\";\r\nimport plantImg from \"./resources/squid-game-minimalist-characters-5.jpg\";\r\nimport hunterImg from \"./resources/squid-game-minimalist-characters-6.jpg\";\r\nimport conservationImg from \"./resources/squid-game-minimalist-characters-7.jpg\";\r\nimport phantomImg from \"./resources/knight.jpg\";\r\nimport styles from \"./styles.module.css\";\r\nimport {\r\n  Header,\r\n  Header2,\r\n  Subheader,\r\n  Content,\r\n  CharacterBox,\r\n  CharacterBox2,\r\n} from \"./components\";\r\n\r\nimport audio from \"./resources/danube.mp3\";\r\n\r\nimport card from \"./resources/card.png\";\r\n\r\nconst characterSelections = [\r\n  { type: \"Agribusiness\", src: agribusinessImg, id: 0 },\r\n  { type: \"Lanternfly\", src: lanternflyImg, id: 1 },\r\n  { type: \"Citizen\", src: citizenImg, id: 2 },\r\n  { type: \"Conservationist\", src: conservationImg, id: 3 },\r\n  { type: \"Government\", src: governmentImg, id: 4 },\r\n  { type: \"Plants\", src: plantImg, id: 5 },\r\n  { type: \"Farmer\", src: farmerImg, id: 6 },\r\n  { type: \"Hunter\", src: hunterImg, id: 7 },\r\n  // { type: '', src: summonerImg },\r\n  // { type: '', src: phantomImg },\r\n];\r\n\r\nconst mappedCharSelections = characterSelections.reduce(\r\n  (acc, { type, src }) => ({\r\n    ...acc,\r\n    [type]: src,\r\n  }),\r\n  {}\r\n);\r\n\r\nconst mappedCharIds = characterSelections.reduce(\r\n  (acc, { type, id }) => ({\r\n    ...acc,\r\n    [type]: id,\r\n  }),\r\n  {}\r\n);\r\n\r\nconst useLevelUpScreen = ({ morphRef, morphedRef }) => {\r\n  const [selected, setSelected] = React.useState(null);\r\n  const [morphing, setMorphing] = React.useState(false);\r\n  const [morphed, setMorphed] = React.useState(false);\r\n  const [ready, setReady] = React.useState(false);\r\n  const [shutdown, setShutdown] = React.useState(false);\r\n\r\n  const onSelect = (type) => (e) => {\r\n    setSelected(type);\r\n    // scrollToComponent(morphRef.current, {\r\n    //   offset: 300,\r\n    //   align: \"bottom\",\r\n    //   duration: 1000,\r\n    // });\r\n  };\r\n\r\n  const onMorph = () => {\r\n    audioplayer.play();\r\n\r\n    setMorphing(true);\r\n    setTimeout(() => {\r\n      setMorphing(false);\r\n      setMorphed(true);\r\n    }, 4000);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (morphed && !ready) {\r\n      scrollToComponent(morphedRef.current, {\r\n        offset: 100,\r\n        align: \"middle\",\r\n        duration: 1000,\r\n      });\r\n      setTimeout(() => {\r\n        setReady(true);\r\n      }, 2000);\r\n    }\r\n  }, [morphed, morphedRef, ready]);\r\n\r\n  React.useEffect(() => {\r\n    if (ready && !shutdown) {\r\n      setTimeout(() => {\r\n        setShutdown(true);\r\n      }, 7000);\r\n      // audioplayer.pause();\r\n    }\r\n  }, [ready, shutdown]);\r\n\r\n  return {\r\n    selected,\r\n    onSelect,\r\n    morphed,\r\n    morphing,\r\n    onMorph,\r\n    ready,\r\n    shutdown,\r\n  };\r\n};\r\n\r\n// const addBodyClass = (\"homebody\") => document.body.classList.add(\"homebody\");\r\n// document.body.style.backgroundColor = \"#047373\";\r\n\r\nlet audioplayer = new Audio(audio);\r\nconst start = () => {\r\n  audio.play();\r\n};\r\n\r\nconst Home = ({ childToParent }) => {\r\n  const morphRef = React.createRef();\r\n  const morphedRef = React.createRef();\r\n  const { selected, onSelect, morphing, morphed, onMorph, ready, shutdown } =\r\n    useLevelUpScreen({\r\n      morphRef,\r\n      morphedRef,\r\n    });\r\n\r\n  const startGame = shutdown;\r\n  const chosen = -1;\r\n\r\n  const [landing, setLanding] = useState(true);\r\n\r\n  //   if (startGame) {\r\n  //     setTimeout( () => {console.log(\"starting game\")}, 10000)}\r\n\r\n  childToParent(startGame);\r\n\r\n  // const [startGame, setStartGame] = useState(false);\r\n\r\n  // let history = useNavigate();\r\n  // if (shutdown) {\r\n  //   history.push(\"./Game1\");\r\n  // }\r\n\r\n  // setTimeout(() => setStartGame(true), 1000)\r\n  // document.body.style.backgroundColor = \"#047373\";\r\n\r\n  if (landing) {\r\n    // document.body.style.backgroundColor = \"black\";\r\n    document.body.style.backgroundColor = \"#231f20\";\r\n    console.log(\"landing page\");\r\n    return (\r\n      <div>\r\n        <img\r\n          src={card}\r\n          className={styles.card}\r\n          width=\"30%\"\r\n          onClick={() => setLanding(false)}\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"30%\",\r\n            left: \"35%\",\r\n          }}\r\n        />\r\n        {/* <button onclick={setLanding(false)} /> */}\r\n      </div>\r\n    );\r\n  } else if (startGame) {\r\n    // return (\r\n    //   <div>\r\n    //     <DialogBox />\r\n    //   </div>\r\n    // );\r\n\r\n    return (\r\n      <div>\r\n        <Game2></Game2>\r\n      </div>\r\n    );\r\n  } else {\r\n    document.body.style.backgroundColor = \"#231f20\";\r\n    return (\r\n      <body class=\"homebody\">\r\n        <div\r\n          className={cx(styles.root, {\r\n            [styles.shutdown]: shutdown,\r\n            [styles.rootTransition]: morphed,\r\n          })}\r\n        >\r\n          <Header>\r\n            {/* welcome to the game */}\r\n            We<span style={{ color: \"#f52d7c\" }}>l</span>come to{\" \"}\r\n            <span style={{ color: \"#f52d7c\" }}>T</span>he Gam\r\n            <span style={{ color: \"#f52d7c\" }}>e</span>\r\n          </Header>\r\n          {/* <Content>\r\n          <CharacterBox\r\n            style={{ width: 200, height: 150 }}\r\n            imgProps={{ src: noviceImg }}\r\n            disableFlashing\r\n          />\r\n        </Content> */}\r\n          {/* <Subheader>Congratulations on reaching level 10!</Subheader> */}\r\n          <div style={{ margin: \"25px auto\" }}>\r\n            <Subheader>Align with a player to begin</Subheader>\r\n            <Subheader></Subheader>\r\n            <Content display=\"grid\">\r\n              {characterSelections.map((props, index) => (\r\n                <CharacterBox\r\n                  key={`char_selection_${index}`}\r\n                  onClick={onSelect(props.type)}\r\n                  isSelected={selected === props.type}\r\n                  {...props}\r\n                />\r\n              ))}\r\n            </Content>\r\n          </div>\r\n          {/* \r\n        <div\r\n          ref={morphRef}\r\n          className={cx(styles.morph, {\r\n            [styles.hidden]: !selected,\r\n          })}\r\n        >\r\n          <MdKeyboardTab className={styles.morphArrow} />\r\n          <button\r\n            ref={morphRef}\r\n            name='morph'\r\n            type='button'\r\n            className={styles.morph}\r\n            // style={{ opacity: morphed ? '0.4' : 1 }}\r\n            // onClick={onMorph}\r\n            disabled={morphed}\r\n          >\r\n            Learn More\r\n          </button>\r\n          <MdKeyboardTab className={styles.morphArrowFlipped} />\r\n        </div> */}\r\n\r\n          <div\r\n            className={cx({\r\n              [styles.morphed]: morphed,\r\n              [styles.hidden]: !selected,\r\n            })}\r\n          >\r\n            <Header2> {selected} Player Stats</Header2>\r\n            <Content>\r\n              <CharacterBox\r\n                ref={morphedRef}\r\n                type={selected}\r\n                headerProps={{ className: styles.unique }}\r\n                imgProps={{ src: mappedCharSelections[selected] }}\r\n                // src={phantomImg}\r\n              />\r\n              <DialogBox\r\n                index={\r\n                  mappedCharIds[selected] == null ? 0 : mappedCharIds[selected]\r\n                }\r\n              />\r\n            </Content>\r\n            {/* <Subheader>\r\n            You have morphed into a <em>{selected}</em>\r\n          </Subheader> */}\r\n          </div>\r\n\r\n          <div\r\n            ref={morphRef}\r\n            className={cx(styles.morph, {\r\n              [styles.hidden]: !selected,\r\n            })}\r\n          >\r\n            <MdKeyboardTab className={styles.morphArrow} />\r\n            <button\r\n              ref={morphRef}\r\n              name=\"morph\"\r\n              type=\"button\"\r\n              className={styles.morph}\r\n              style={{ opacity: morphed ? \"0.4\" : 1 }}\r\n              onClick={onMorph}\r\n              disabled={morphed}\r\n            >\r\n              {morphing ? \"Selecting...\" : morphed ? \"Please Wait\" : \"Select\"}\r\n            </button>\r\n            <MdKeyboardTab className={styles.morphArrowFlipped} />\r\n          </div>\r\n\r\n          <div\r\n            className={cx({\r\n              [styles.morphed]: morphed,\r\n              [styles.hidden]: !morphed,\r\n            })}\r\n          >\r\n            <Header2>We will now commence Game 1</Header2>\r\n            <Content>\r\n              {/* <CharacterBox\r\n                ref={morphedRef}\r\n                type={selected}\r\n                headerProps={{ className: styles.unique }}\r\n                imgProps={{ src: mappedCharSelections[selected] }}\r\n                src={phantomImg}\r\n              /> */}\r\n            </Content>\r\n            <Subheader>\r\n              {/* You have morphed into a <em>{selected}</em> */}\r\n              {/* ~Imagine the Blue Danube is playing right now~ */}\r\n            </Subheader>\r\n          </div>\r\n          <div\r\n            className={cx(styles.next, {\r\n              [styles.hidden]: !ready,\r\n            })}\r\n          >\r\n            <div>\r\n              <RingLoader size={60} color=\"rgb(213, 202, 255)\" loading />\r\n              <p>Loading...</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </body>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Home;\r\n\r\n// index.js:1\r\n\r\n//        Warning: Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\r\n//     at Navigate (http://localhost:3000/static/js/vendors~main.chunk.js:88645:5)\r\n//     at Router (http://localhost:3000/static/js/vendors~main.chunk.js:88695:15)\r\n//     at BrowserRouter (http://localhost:3000/static/js/vendors~main.chunk.js:88210:5)\r\n//     at App (http://localhost:3000/static/js/main.chunk.js:218:7)\r\n","import React, { useState } from \"react\";\n\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from \"react-router-dom\";\n\nimport io from \"socket.io-client\";\n\nimport Home from \"./Home\";\nimport Game1 from \"./Game1\";\n\nimport card from \"./resources/card.png\";\n\nconst socket = io.connect(\"/\");\n\nconst App = () => {\n  const [startGame, setStartGame] = useState(false);\n  const [landing, setLanding] = useState(true);\n\n  const childToParent = (childdata) => {\n    setStartGame(childdata);\n  };\n\n  // if (true) {\n  //   return (\n  //     <div>\n  //       <Game1></Game1>\n  //     </div>\n  //   );\n  // } else\n\n  return (\n    <div>\n      <Home childToParent={childToParent}></Home>\n      {/* {console.log(startGame)} */}\n    </div>\n\n    //     <Router>\n    // {/* <App /> */}\n    // <Routes>\n    //     <Route exact path=\"/\" component={App}/>\n    //     <Navigate path = \"/Game1\" component = {Game1}/>\n    // </Routes>\n    // </Router>\n  );\n};\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\n    \nimport App from \"./App\"\nimport Game1 from \"./Game1\"\n\n// import * as serviceWorker from './serviceWorker'\n// import App from './App'\nReactDOM.render(\n<App/>, document.getElementById('root')\n);\n// serviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardContainer\":\"styles_cardContainer__1pufm\",\"card\":\"styles_card__1fdZU\",\"flash\":\"styles_flash__19yxp\",\"root\":\"styles_root__3P1zr\",\"container\":\"styles_container__B1RDD\",\"header\":\"styles_header__3IaFe\",\"header2\":\"styles_header2__1K0N4\",\"subheader\":\"styles_subheader__e821V\",\"characterBox\":\"styles_characterBox__1tBgD\",\"selectedBox\":\"styles_selectedBox__2lC98\",\"tier2\":\"styles_tier2__1F0xP\",\"selected\":\"styles_selected__36FNh\",\"hueRotate\":\"styles_hueRotate__NtHF-\",\"morph\":\"styles_morph__1lUur\",\"morphArrow\":\"styles_morphArrow__1cNaW\",\"morphArrowFlipped\":\"styles_morphArrowFlipped__35mDB styles_morphArrow__1cNaW\",\"morphed\":\"styles_morphed__1C8hI\",\"flashfade\":\"styles_flashfade__3eio-\",\"hidden\":\"styles_hidden__3ruy5\",\"next\":\"styles_next__1dIgd\",\"shutdown\":\"styles_shutdown__gpbb3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"game\":\"Game2_game__2oW4d\",\"piggy\":\"Game2_piggy__migM0\",\"money\":\"Game2_money__SU1FM\",\"dropin\":\"Game2_dropin__3FbGW\",\"image\":\"Game2_image__35VmJ\",\"wobble\":\"Game2_wobble__1dYhw\"};","module.exports = __webpack_public_path__ + \"static/media/piggy.d93aad18.png\";","module.exports = __webpack_public_path__ + \"static/media/squid-game-minimalist-characters-0.0b826c8f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/card.1ce74ac6.png\";","module.exports = __webpack_public_path__ + \"static/media/danube.ca47a1f8.mp3\";","module.exports = __webpack_public_path__ + \"static/media/money.25123873.png\";","module.exports = __webpack_public_path__ + \"static/media/bedroom.93f9c0e2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/squid-game-minimalist-characters-1.ae8e07d5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/squid-game-minimalist-characters-2.4c968f9e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/squid-game-minimalist-characters-3.1770c12b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/squid-game-minimalist-characters-4.0b1016fb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/squid-game-minimalist-characters-5.41042131.jpg\";","module.exports = __webpack_public_path__ + \"static/media/squid-game-minimalist-characters-6.4e0fd252.jpg\";","module.exports = __webpack_public_path__ + \"static/media/squid-game-minimalist-characters-7.bce9db83.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Lobby.5e16c2ae.png\";","module.exports = __webpack_public_path__ + \"static/media/knight.12fe2eee.jpg\";"],"sourceRoot":""}